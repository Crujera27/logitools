/*
.____                 .__  __                .__          
|    |    ____   ____ |__|/  |_  ____   ____ |  |   ______
|    |   /  _ \ / ___\|  \   __\/  _ \ /  _ \|  |  /  ___/
|    |__(  <_> ) /_/  >  ||  | (  <_> |  <_> )  |__\___ \ 
|_______ \____/\___  /|__||__|  \____/ \____/|____/____  >
        \/    /_____/                                  \/ 
                         
        
    Copyright (C) 2024 Ángel Crujera (angel.c@galnod.com)

    This program is free software: you can redistribute it and/or modify  
    it under the terms of the GNU Affero General Public License as published by  
    the Free Software Foundation, either version 3 of the License, or  
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,  
    but WITHOUT ANY WARRANTY; without even the implied warranty of  
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the  
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License  
    along with this program. If not, see <https://www.gnu.org/licenses/>.
    
    GitHub: https://github.com/Crujera27/
    Website: https://crujera.galnod.com

*/

const { MessageContextMenuCommandInteraction, ContextMenuCommandBuilder } = require('discord.js');
const ExtendedClient = require('../../../class/ExtendedClient.js');

module.exports = {
    structure: new ContextMenuCommandBuilder()
        .setName('Reportar contenido en el mensaje')
        .setType(3),
    /**
     * @param {ExtendedClient} client 
     * @param {MessageContextMenuCommandInteraction} interaction 
     */
    run: async (client, interaction) => {
        try {
            const { parseConfig } = await import('../../../../tools/parseConfig.mjs')
            if (interaction.targetMessage.author.id == interaction.user.id) {
                return await interaction.reply({
                    content: '¡Quiérete un poco! No puedes reportar un mensaje que ha sido enviado por ti mismo/a.',
                    ephemeral: true,
                });
            }
            if (interaction.targetMessage.author.bot) {
                return await interaction.reply({
                    content: 'No puedes reportar un mensaje enviado por un bot.',
                    ephemeral: true,
                });
            }
            if (interaction.targetMessage.author.id == interaction.guild.ownerId) {
                return await interaction.reply({
                    content: 'No puedes reportar un mensaje del dueño/a del servidor.',
                    ephemeral: true,
                });
            }

            await interaction.reply({
                content: 'Esta funcionalidad se encuentra desactivada temporalmente. Por favor, abra un ticket para informar sobre un usuario.',
                ephemeral: true,
            });
        } catch (error) {
            console.error('Error occurred while parsing config:', error);
        }
    }
};
