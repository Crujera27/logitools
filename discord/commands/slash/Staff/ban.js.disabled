/*
.____                 .__  __                .__          
|    |    ____   ____ |__|/  |_  ____   ____ |  |   ______
|    |   /  _ \ / ___\|  \   __\/  _ \ /  _ \|  |  /  ___/
|    |__(  <_> ) /_/  >  ||  | (  <_> |  <_> )  |__\___ \ 
|_______ \____/\___  /|__||__|  \____/ \____/|____/____  >
        \/    /_____/                                  \/ 
                         
        
    Copyright (C) 2024  Ángel Crujera (angel.c@galnod.com)

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.
    
    GitHub: https://github.com/Crujera27/
    Website: https://crujera.galnod.com

*/

const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const ExtendedClient = require('../../../class/ExtendedClient.js');
const { log } = require('../../../functions.js');

let toolsPromise;
try {
    toolsPromise = import('../../../../tools/punishment.mjs');
} catch (error) {
    console.error('Error importing tools:', error);
}

module.exports = {
    structure: new SlashCommandBuilder()
        .setName('ban')
        .setDescription('[STAFF] Suspende a un usuario del servidor de manera permanente.')
        .addUserOption((opt) =>
            opt.setName('user')
                .setDescription('El usuario al que sancionar')
                .setRequired(true)
        )
        .addStringOption(option =>
            option.setName('reason')
                .setDescription('Razón de la suspensión temporal')
                .setRequired(true)
        ),
    run: async (client, interaction) => {
        try {
            const mentionable = interaction.options.getUser('user');
            const reason = interaction.options.get('reason')?.value || 'No razón proporcionada';

            const targetUser = await interaction.guild.members.fetch(mentionable);

            if (!targetUser) {
                await interaction.editReply("Ese usuario no existe en este servidor.");
                return;
            }

            if (targetUser.id === interaction.guild.ownerId) {
                await interaction.editReply("No puedes banear a ese usuario porque es el propietario del servidor.");
                return;
            }

            const targetUserRolePosition = targetUser.roles.highest.position; // Highest role of the target user
            const requestUserRolePosition = interaction.member.roles.highest.position; // Highest role of the user running the cmd
            const botRolePosition = interaction.guild.members.me.roles.highest.position; // Highest role of the bot

            if (targetUserRolePosition >= requestUserRolePosition) {
                await interaction.editReply("No puedes banear a ese usuario porque tiene el mismo o un rol más alto que tú.");
                return;
            }

            if (targetUserRolePosition >= botRolePosition) {
                await interaction.editReply("No puedo banear a ese usuario porque tiene el mismo o un rol más alto que yo.");
                return;
            }

            const tools = await toolsPromise;
            const bannedEmbed = new EmbedBuilder()
                .setColor()
                .setTitle('Mensaje de la moderación de Logikk\'s Discord')
                .setDescription(`Hola, ${targetUser}. Nos ponemos en contacto contigo para informarte sobre las medidas que se han tomado debido a tu conducta.\n\n Sanción impuesta: **Suspensión permanente (Ban)**\nRazón: ${reason}\n\nSi consideras que esta sanción ha sido aplicada incorrectamente o de manera injusta, puedes enviar una solicitud de apelación en [este enlace](https://logikk.galnod.com/support).\n\nUn saludo, **Departamento de Certidumbre y Seguridad de Logikk's Discord**`)
                .setTimestamp();

            await targetUser.send({ embeds: [bannedEmbed] });

            const punishmentApplied = await tools.applyPunishment(targetUser.id, 'ban', reason, interaction.user.id);

            if (!punishmentApplied.success) {
                await interaction.reply({
                    content: 'Ha ocurrido un error al intentar registrar la sanción en el historial del usuario.',
                    ephemeral: true
                });
                return;
            }

            const finalReason = `${reason} | ID del Staff: ${interaction.user.id}`;

            await targetUser.ban({ reason: finalReason });
            await interaction.reply(`${targetUser.tag} (${targetUser.id}) ha sido suspendido/a **permanentemente** con la razón: \`${reason}\``);
        } catch (error) {
            log(`Hubo un error al intentar banear: ${error}`, 'err');
            await interaction.reply({
                content: `Ha ocurrido un error desconocido al intentar aplicar el ban al usuario. (${error})`,
                ephemeral: true
            });
        }
    }
};
